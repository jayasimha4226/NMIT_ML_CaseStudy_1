# -*- coding: utf-8 -*-
"""ML-Class: Decision-Tree Classifier Kaggle NoteBook

Automatically generated by Colaboratory.

Original file is located at
    https://www.kaggle.com/code/sateeshambesangenitk/ml-class-decision-tree-classifier/
"""

import streamlit as st
import pandas as pd
import numpy as np
import joblib

from sklearn.tree import DecisionTreeClassifier

#Loading up the Classification model we created

model = joblib.load('finalized_model.joblib')
#Caching the model for faster loading
@st.cache

# Define the prediction function
def predict(Present_Price, Kms_Driven, Owner, YearofMake, Fuel_Type, Seller_Type_Individual, Transmission_Type):
    if Fuel_Type == 'Petrol':
        Fuel_Type_Diesel = 0
        Fuel_Type_Petrol = 1
    elif Fuel_Type == 'Diesel':
        Fuel_Type_Diesel = 1
        Fuel_Type_Petrol = 0
    elif Fuel_Type == 'Other':
        Fuel_Type_Diesel = 0
        Fuel_Type_Petrol = 0
    if Transmission_Type == 'Transmission_Manual':
        Transmission_Manual = 1
    elif Transmission_Type == 'Transmission_Automatic':
        Transmission_Manual = 0
    elif Transmission_Type == 'Other':
        Transmission_Manual = 2
    no_year = 2021 - YearofMake
    df = pd.DataFrame([[Present_Price, Kms_Driven, Owner, no_year, Fuel_Type_Diesel, Fuel_Type_Petrol, Seller_Type_Individual, Transmission_Manual]], columns=['Present_Price', 'Kms_Driven', 'Owner', 'no_year','Fuel_Type_Diesel', 'Fuel_Type_Petrol', 'Seller_Type_Individual','Transmission_Manual'])
    prediction = model.predict(df)
    return prediction
'buying', 'maint', 'doors', 
                                  'persons', 
                                  'lug_boot', 'safety'

st.title('Car Evaluation Classification')
st.image("""https://images.livemint.com/img/2020/09/16/1600x900/carsales-koVB--621x414@LiveMint_1600277936612.jpg""")
st.header('Enter the Information of the Car:')
Buying = st.number_input('buying:', min_value=1, max_value=5, value=1)
Kms_Driven = st.number_input('Kms_Driven:', min_value=0, max_value=10000000, value=10000)
Owner = st.number_input('Owner:', min_value=0, max_value=3, value=1)
YearofMake = st.number_input('YearofMake:', min_value=1900, max_value=2024, value=2021)
Fuel_Type = st.radio('Fuel_Type:', ('Petrol', 'Diesel', 'Other'))
Seller_Type_Individual = st.number_input('Seller_Type_Individual:', min_value=0, max_value=1, value=1)
Transmission_Type = st.radio('Transmission_Type:', ('Transmission_Manual', 'Transmission_Automatic', 'Other'))

if st.button('Submit_Car_Infos'):
    sale_price = predict(Present_Price, Kms_Driven, Owner, YearofMake, Fuel_Type, Seller_Type_Individual, Transmission_Type)
    st.success(f'The Sale Price of the Car : {sale_price[0]:.2f}')
